apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.qianbajin.nn"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            // 去除无用资源
            shrinkResources true
            // 开启代码混淆
            minifyEnabled true
            // 代码压缩
            zipAlignEnabled true
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "NoAd-${variant.versionName}-${variant.versionCode}-${variant.name}-${releaseTime()}.apk"
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getDefault())
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13.2'
    compileOnly 'de.robv.android.xposed:api:82'
}

afterEvaluate {
    // for app test, copy the final aar to application libs
    android.applicationVariants.all { variant ->
        File outputFile = variant.outputs.first().outputFile
        logger.quiet("+---" + variant.name + " -" + variant.name.capitalize())
        if (variant.name == 'release') {
            logger.quiet("----->>do copy apk")
            copy {
                logger.quiet("----->>do copy --->>" + outputFile)
                from outputFile
                into "../app/bak/"
            }
        }
//        tasks.named("${variant.name.capitalize().toLowerCase()}").configure {
//            doLast {
//                copy {
//                    from outputFile
//                    into "../bak/"
////                    rename outputFile.name, "fat-aar-final.aar"
//                }
//            }
//        }
    }
}